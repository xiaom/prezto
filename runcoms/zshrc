#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

autoload -U compinit
compinit
. `brew --prefix`/etc/profile.d/z.sh
# Customize to your needs...
autoload -U +X bashcompinit && bashcompinit
eval "$(stack --bash-completion-script "$(which stack)")"

export EDITOR=vim
export VISUAL=vim

# Bookmark for directories
# ========================
export DR=$HOME'/drill-workspace/drill/'
export DP=$HOME'/Dropbox/projects'
export DE=$HOME'/Dropbox/projects/depth-exam'
export P=$DP'/proposal'
export HV=$HOME'/hive-workspace/hive'
export LC=$DP'/polystore'
# alias sqlite='/usr/local/Cellar/sqlite/3.10.1/bin/sqlite3'
# export DRCLI=$HOME'/drill-workspace/drill/contrib/native/client'
# export HS2D=$HOME'/hive-workspace/hs2driver'
# export HS2=$HOME'/hive-workspace/hive/service/src/java/org/apache/hive/service/server'
# export DCUBE=$HOME'/Dropbox/Projects/domcube-src'
# export HS2HOME=/Users/xiaom/hive-workspace/hive/packaging/target/apache-hive-2.0.0-SNAPSHOT-bin/apache-hive-2.0.0-SNAPSHOT-bin
# export RAML=$HOME'/Dropbox/projects/raml-apis'
export R=$HOME'/research'


tufte() {
  pandoc -s -S --toc -c tufte-css/tufte.css $1.org -o $1.html;
}
marked() {
  pandoc -s -S --toc -c $1 $1.org -o $1.html;
}

export SQL_SHOW_TCP="\
SELECT \
L.pid, L.port, P.cmdline \
FROM \
listening_ports L , etc_protocols E, processes P  \
WHERE \
L.protocol = E.number and \
L.pid = P.pid and \
E.name = \"tcp\" \
"
alias ShowTCP='osqueryi "$SQL_SHOW_TCP"; echo $SQL_SHOW_TCP'
# -sV: Probe open ports to determine service/version info
alias ShowHTTP="nmap -sV localhost"
alias ShowHTTPDetail="nmap -sV --script=http-enum localhost"
# Alias for OS X Management
# =========================
alias CleanDupOpenWith="/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain system -domain user"

# http://www.makeuseof.com/tag/these-6-awesome-terminal-commands-will-boost-your-macbook/
alias ShowDock="defaults write com.apple.dashboard mcx-disabled -boolean YES && killall Dock"
alias HideDock="defaults write com.apple.dashboard mcx-disabled -boolean NO && killall Dock"
alias HideDesktopIcons="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias ShowDesktopIcons="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
alias HideApptivateMenuBar="defaults write se.cocoabeans.apptivate TAShowStatusbarIcon 0"

# - Disable a service `sudo launchctl unload -w /Library/LaunchDaemons/com.foundationdb.fdbmonitor.plist`
alias ShowIP="ifconfig en0 | awk '/inet / {print $2}'"
alias TurnOffSpotlight="sudo mdutil -a -i off"
alias TurnOnSpotlight="sudo mdutil -a -i on"
alias TurnOnWiFi="networksetup -setairportpower en0 on"
alias TurnOffWiFi="networksetup -setairportpower en0 off"
# ----------------
# Self Control
# ----------------
# [Read the settings]
# defaults read org.eyebeam.SelfControl
#
# [Set the block length and interval]
# defaults write org.eyebeam.SelfControl MaxBlockLength -int [maximum block length in minutes]
# defaults write org.eyebeam.SelfControl BlockLengthInterval -int [block length interval in minutes]
#
# === Comment due to wired stuffs  ===
# alias SelfControlDays="defaults write org.eyebeam.SelfControl MaxBlockLength -int 720"
# alias SelfControlIntervals="defaults write org.eyebeam.SelfControl BlockLengthInterval -int 25"
# 
# BaseWhitelist(){
#     defaults write org.eyebeam.SelfControl BlockAsWhitelist -int 1 
#     defaults write org.eyebeam.SelfControl HostBlacklist -array "xiami.com" "www.noisli.com"
# }
# 
# SetWhitelist(){
#     BaseWhitelist
#     defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
#     "debuggex.com"
#     defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
# 	"spotify.com" \
# 	"vocabulary.com"  "vocab.com" \
# 	"github.com"  "bitbucket.org" \
# 	"www.evernote.com" \
# 	"coffitivity.com" 
# 	# Google Remote
#      defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
# 	"199.212.24.18" \
# 	"googleusercontent.com" \
# 	"1e100.net"
# 	# Dropbox and iCloud
#     defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
# 	"icloud.com" \
# 	"dropbox.com" \
#     "thunder.v.dropbox.com" \
#     "beacon.v.dropbox.com" \
#     "harmony.v.dropbox.com" \
#     "bolt.v.dropbox.com" \
#     "dl-doc-duc-balancer.x.dropbox.com" \
#     "photos-thumb-spdy.x.dropbox.com" \
#     "dl-doc-balancer.x.dropbox.com" \
# 	"199.47.216.0/24" \
# 	"108.160.160.0/20" \
# 	"205.189.0.0/24" \
# 	"199.47.216.0/24" 
#     # SFU
#     defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
# 	"sfu.ca" \
# 	"search.lib.sfu.ca" \
# 	"proxy.lib.sfu.ca" \
# 	"login.proxy.lib.sfu.ca"
# 	# Research Paper
#     defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
#     "google.ca" \
#     "google.com" \
# 	"mail.google.com" \
# 	"acm.org" \
# 	"vldb.org"
#     defaults write org.eyebeam.SelfControl HostBlacklist -array-add \
#     "ec2-54-243-252-100.compute-1.amazonaws.com" # Dayone
# }
# SelfControlTest() {
#     SetWhitelist
#     sudo /Applications/SelfControl.app/Contents/MacOS/org.eyebeam.SelfControl $(id -u $(whoami)) --install
# }
# SelfControlStart() {
#     defaults write org.eyebeam.SelfControl BlockLengthInterval -int 25
#     defaults write org.eyebeam.SelfControl BlockDuration -int 25
#     SetWhitelist
#     sudo /Applications/SelfControl.app/Contents/MacOS/org.eyebeam.SelfControl $(id -u $(whoami)) --install
# }
# 
alias DisableAWDL="ifconfig awdl0 down"
alias GenRandMac="openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'"

# - QuickLook:
# qlmanage -p FILE_PATH

# Alias for Apps
# ==============
alias vi='/Applications/MacVim.app/Contents/MacOS/Vim'
alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'

function open_with_emacs () {
    open -a Emacs $1
    # http://www.bash2zsh.com/zsh_refcard/refcard.pdf
    if [[ $? -ne 0 ]]; then
        touch $1
        open -a Emacs $1
    fi;
}
alias em='open_with_emacs'
alias emc='open_with_emacs'
alias gl='git lg | less'
alias sql=$(brew list sqlite | grep 'bin/sqlite3')
alias subl='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'

function open_localhost_with_port () {
   open http://localhost:$1
}
alias ol='open_localhost_with_port'

# Hadoop
# ------
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export GROOVY_HOME=/usr/local/opt/groovy/libexec
export SCALA_HOME=/usr/local/opt/scala/idea
export M2_HOME=/usr/local/Cellar/maven/3.3.9/libexec
export SPARK_HOME='/usr/local/Cellar/apache-spark/1.6.0/libexec'
export SK=$SPARK_HOME'/libexec/sbin'

# Docker
# ------

# - ENV by Boot2Docker
#export DOCKER_HOST=tcp://192.168.59.103:2376
#export DOCKER_CERT_PATH=/Users/xiaom/.boot2docker/certs/boot2docker-vm
#export DOCKER_TLS_VERIFY=1

# - get latest container ID
alias dl="docker ps -l -q"
alias dps="docker ps"
alias dpa="docker ps -a"
alias di="docker images"

# - get container IP
alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

# - run deamonized container, e.g., $dkd base /bin/echo hello
alias dkd="docker run -d -P"

# - run interactive container, e.g., $dki base /bin/bash
alias dki="docker run -i -t -P"
# - remove unnamed images
drmi () { docker rmi -f $(docker images | grep none | awk '{print $3}')}
drm () { docker rm -f $(docker ps -aq) }
dstop() { docker stop $(docker ps -a -q); }

# - Dockerfile build, e.g., $dbu tcnksm/test 
dbu() { docker build -t=$1 .; }

# - show all alias related docker
dalias() { alias | grep 'docker' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
